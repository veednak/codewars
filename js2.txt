Intruction: 
For example, take 153 (3 digits), which is narcisstic:

    1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153
and 1652 (4 digits), which isn't:

    1^4 + 6^4 + 5^4 + 2^4 = 1 + 1296 + 625 + 16 = 1938
The Challenge:

Your code must return true or false (not 'true' and 'false') depending upon whether the given number is a Narcissistic number in base 10.
This may be True and False in your language, e.g. PHP.

Error checking for text strings or other invalid inputs is not required, only valid positive non-zero integers will be passed into the function.

Solution:
function narcissistic(value) {
  let sum = 0, count = 0, m = 1, temp=value;
  while(value/m > 1)
    {
      m*=10;
      count++;
    }
  while(temp)
    {
      sum+= Math.pow(temp%10,count);
      temp = Math.floor(temp/10);
    }
  if(sum==value)
    {
      return true;
    }
  else{
    return false;
  }
}

Sample Tests
describe( "Narcissistic Function", function() {
  it( "should find small numbers are all narcissistic", function() {
    Test.assertEquals(narcissistic( 7 ), true, "7 is narcissistic" );
  });
  
  it( "should find these numbers are narcissistic", function() {
    Test.assertEquals(narcissistic( 371 ), true, "371 is narcissistic" );
  });
});